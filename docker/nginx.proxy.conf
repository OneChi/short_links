user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;
  client_max_body_size 20M;

  # set timeout for proxy requests
  proxy_connect_timeout       600;
  proxy_send_timeout          600;
  proxy_read_timeout          600;
  send_timeout                600;

  gzip  on;

  # Serve Admin panel and Swagger from dev.* subdomain to avoid conflicts with React static files and API requests.
  server {
    listen 80;
    server_name ~^(dev\.)(.+)$;

    location / {
      proxy_pass http://sl.backend:8000;
    }

    location /media  {
        alias /code/media;
    }
  }

  # Serve React app.
  server {
    listen 80 default_server;

    # Redirect requests for React static files to frontend container.
    location / {
      proxy_pass http://sl.frontend:80;
    }

    # Redirect API request to backend container.
    location /v1.0/ {
      proxy_pass http://sl.backend:8000;
    }

    # Redirect API request to new backend container.
    location /v2.0/ {
      proxy_pass http://sl.newbackend:8002;
    }

    # Serve uploaded media files.
    location /media {
      alias /code/media;
    }

    # Redirect to Prometreus metrics endpoint.
    location = /metrics {
      proxy_pass http://sl.backend:8000;
    }
  }
}